// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${relativeFile}: the current opened file relative to workspaceRoot
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
	"version": "0.1.0",

	// Start PowerShell
    "windows": {
        "command": "${env.windir}\\sysnative\\windowspowershell\\v1.0\\PowerShell.exe"
    },
    "linux": {
        "command": "/usr/bin/powershell"
    },
    "osx": {
        "command": "/usr/local/bin/powershell"
    },

	// The command is a shell script
	"isShellCommand": true,

	// Show the output window always
	"showOutput": "always",

    "args": [
        "-NoProfile", "-ExecutionPolicy", "Bypass"
    ],

    // Associate with test task runner
    "tasks": [
        {
            "taskName": "Clean",
            "suppressTaskName": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Invoking Invoke-Build on *.build.ps1 -Task Clean'; Invoke-Build -Task Clean;",
                "Invoke-Command { Write-Host 'Completed Clean task in task runner.' }"
            ]
        },
        {
            "taskName": "Build",
            "suppressTaskName": true,
            "isBuildCommand": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Invoking Invoke-Build on *.build.ps1'; Invoke-Build;",
                "Invoke-Command { Write-Host 'Completed Build task in task runner.' }"
            ]
        },
        {
            "taskName": "Plaster",
            "suppressTaskName": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Invoking Invoke-Build on *.build.ps1 -Task Plaster'; Invoke-Build -Task Plaster;",
                "Invoke-Command { Write-Host 'Completed Plaster task in task runner.' }"
            ]
        },
        {
            "taskName": "InstallTemplate",
            "suppressTaskName": true,
            "isTestCommand": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Invoking Invoke-Build on *.build.ps1 -Task Plaster'; Invoke-Build -Task InstallTemplate;",
                "Invoke-Command { Write-Host 'Completed InstallTemplate task in task runner.' }"
            ]
        }
	]
}